post:
  tags: [Orders]
  summary: Create an order (transactional). Decrements stock on success.
  description: |
    Creates a new order with inventory allocation. Requires idempotency key
    to prevent duplicate orders. Returns 201 on creation, 200 on replay.
  operationId: createOrder
  security: [ { bearerAuth: [] } ]
  parameters:
    - in: header
      name: Idempotency-Key
      required: true
      schema: { type: string }
      example: 'order-2025-abc123'
  requestBody:
    required: true
    content:
      application/json:
        schema: { $ref: '#/components/schemas/CreateOrderRequest' }
        examples:
          sample:
            value:
              quantity: 10
              shipTo: { lat: 40.71, lng: -74.0 }
              clientRef: 'PO-12345'
  responses:
    '201':
      description: Order created successfully
      headers:
        X-Request-Id:         { $ref: '#/components/headers/X-Request-Id' }
        X-Order-Id:           { $ref: '#/components/headers/X-Order-Id' }
        X-Rule-Set-Id:        { $ref: '#/components/headers/X-Rule-Set-Id' }
        X-RateLimit-Limit:    { $ref: '#/components/headers/X-RateLimit-Limit' }
        X-RateLimit-Remaining:{ $ref: '#/components/headers/X-RateLimit-Remaining' }
        X-RateLimit-Reset:    { $ref: '#/components/headers/X-RateLimit-Reset' }
      content:
        application/json:
          schema: { $ref: '#/components/schemas/CreateOrderResponse' }
          examples:
            created:
              value:
                orderId: '6126ef6f-2387-4f0e-9bcd-bf9130d20f73'
                ruleSetId: 'a1b2c3d4-e5f6-7890-abcd-ef1234567890'
                totals:
                  unitPriceCents: 15000
                  subtotalCents: 750000
                  discountPct: 10
                  discountCents: 75000
                  shippingCents: 369
                  totalCents: 675369
                allocation:
                  - warehouseId: '08d6c070-6212-4f0e-9bcd-bf9130d20f73'
                    quantity: 50
                    distanceKm: 20.2
                    shippingCents: 369
    '200':
      description: Idempotent replay - order already exists
      headers:
        X-Request-Id:         { $ref: '#/components/headers/X-Request-Id' }
        X-Order-Id:           { $ref: '#/components/headers/X-Order-Id' }
        X-Rule-Set-Id:        { $ref: '#/components/headers/X-Rule-Set-Id' }
        X-Idempotency-Replayed:{ $ref: '#/components/headers/X-Idempotency-Replayed' }
        X-RateLimit-Limit:    { $ref: '#/components/headers/X-RateLimit-Limit' }
        X-RateLimit-Remaining:{ $ref: '#/components/headers/X-RateLimit-Remaining' }
        X-RateLimit-Reset:    { $ref: '#/components/headers/X-RateLimit-Reset' }
      content:
        application/json:
          schema: { $ref: '#/components/schemas/CreateOrderResponse' }
    '401': { $ref: '#/components/responses/Unauthorized' }
    '403': { $ref: '#/components/responses/Forbidden' }
    '409':
      description: Conflict - insufficient stock or shipping ratio exceeded
      headers:
        X-Request-Id: { $ref: '#/components/headers/X-Request-Id' }
      content:
        application/json:
          schema: { $ref: '#/components/schemas/ErrorResponse' }
          examples:
            insufficientStock: { value: { error: { code: INSUFFICIENT_STOCK, message: 'Only 5 units available, requested 10' } } }
            shippingExceeded:  { value: { error: { code: SHIPPING_EXCEEDS_LIMIT, message: 'Shipping cost exceeds 15% of order value' } } }
    '422': { $ref: '#/components/responses/UnprocessableEntity' }
    '429': { $ref: '#/components/responses/TooManyRequests' }
    '503':
      description: Service unavailable - pricing not configured
      headers:
        X-Request-Id: { $ref: '#/components/headers/X-Request-Id' }
      content:
        application/json:
          schema: { $ref: '#/components/schemas/ErrorResponse' }
          examples:
            noPricing: { value: { error: { code: PRICING_NOT_CONFIGURED, message: 'No active pricing ruleset found' } } }